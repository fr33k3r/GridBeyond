@model List<Stock>

@{
    ViewBag.Title = "Stock Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model != null)
{
    <div class="table-responsive">
        <table id="aggregate" class="table table-primary table-sm table-bordered text-center" style="margin:auto; width:75%;">
            <thead>
                <tr>
                    <th>Max Market Price</th>
                    <th>Min Market Price</th>
                    <th>Average Market Price</th>
                    <th>Most expensive hour window</th>
                </tr>
            </thead>
            <tbody> 
                @{ GridBeyond.Models.StockAggregates aggregates = (GridBeyond.Models.StockAggregates)ViewData["aggregates"]; }
                <tr>
                    <td>@aggregates.Max</td>
                    <td>@aggregates.Min</td>
                    <td>@aggregates.Average</td>
                    <td>@aggregates.MaxExpensive</td>
                </tr>                
            </tbody>
        </table>
        <hr>
        <table id="stocks" class="table table-sm table-bordered" style="width:100%;">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Market Price EX1</th>                
                </tr>
            </thead>
            <tbody>
                @foreach (var stock in Model)
                {
                    <tr>
                        <td>@stock.Date</td>
                        <td>@stock.MarketPrice</td>                        
                    </tr>
                }
            </tbody>
        </table>        
    </div>    
}
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>    

    <script>
        $(document).ready(function() {
            $('#stocks thead tr')
                .clone(true)
                .addClass('filters')
                .appendTo('#stocks thead');

            $('#stocks').DataTable({
                columnDefs: [{ type: 'date', 'targets': [0] }], 
                order: [[0, 'asc']],                
                orderCellsTop: true,
                fixedHeader: true,
                initComplete: function() {
                    var api = this.api();
                    // For each column
                    api
                        .columns()
                        .eq(0)
                        .each(function(colIdx) {
                            // Set the header cell to contain the input element
                            var cell = $('.filters th').eq(
                                $(api.column(colIdx).header()).index()
                            );
                            var title = $(cell).text();
                            $(cell).html('<input type="text" placeholder="' + title + '" />');

                            // On every keypress in this input
                            $(
                                'input',
                                $('.filters th').eq($(api.column(colIdx).header()).index())
                            )
                                .off('keyup change')
                                .on('change', function(e) {
                                    // Get the search value
                                    $(this).attr('title', $(this).val());
                                    var regexr = '({search})'; //$(this).parents('th').find('select').val();

                                    var cursorPosition = this.selectionStart;
                                    // Search the column for that value
                                    api
                                        .column(colIdx)
                                        .search(
                                            this.value != ''
                                                ? regexr.replace('{search}', '(((' + this.value + ')))')
                                                : '',
                                            this.value != '',
                                            this.value == ''
                                        )
                                        .draw();
                                })
                                .on('keyup', function(e) {
                                    e.stopPropagation();

                                    $(this).trigger('change');
                                    $(this)
                                        .focus()[0]
                                        .setSelectionRange(cursorPosition, cursorPosition);
                                });
                        });
                },
            });

        });
    </script>
